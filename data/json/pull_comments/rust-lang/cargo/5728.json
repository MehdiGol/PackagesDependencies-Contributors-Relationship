[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/405081831", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-405081831", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 405081831, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTA4MTgzMQ==", "user": {"login": "rust-highfive", "id": 7378925, "node_id": "MDQ6VXNlcjczNzg5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7378925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-highfive", "html_url": "https://github.com/rust-highfive", "followers_url": "https://api.github.com/users/rust-highfive/followers", "following_url": "https://api.github.com/users/rust-highfive/following{/other_user}", "gists_url": "https://api.github.com/users/rust-highfive/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-highfive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-highfive/subscriptions", "organizations_url": "https://api.github.com/users/rust-highfive/orgs", "repos_url": "https://api.github.com/users/rust-highfive/repos", "events_url": "https://api.github.com/users/rust-highfive/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-highfive/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-15T10:31:06Z", "updated_at": "2018-07-15T10:31:06Z", "author_association": "NONE", "body": "Thanks for the pull request, and welcome! The Rust team is excited to review your changes, and you should hear from @alexcrichton (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nPlease see [the contribution instructions](https://github.com/rust-lang/cargo/blob/master/CONTRIBUTING.md) for more information.\n"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/405103173", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-405103173", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 405103173, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEwMzE3Mw==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-15T16:42:07Z", "updated_at": "2018-07-15T16:42:07Z", "author_association": "CONTRIBUTOR", "body": "@detrumi I saw your message on Discord, did you figure out the virtual manifest distinction?  There are two manifest types, `Manifest` and `VirtualManifest`.  You can look at `profiles` as an example of something that can be specified in both.  The virtual one is usually accessed via the `Workspace`.\r\n\r\nI'd caution about having packages override the workspace, since that's the opposite precedence of other workspace settings.  I'm not sure how that should work.\r\n\r\nAlso, just a heads up, rustdoc lint settings will probably be stabilized soon (rust-lang/rust#52354), and will probably want to reuse these for rustdoc.  (Which will also probably need cap-lint support, but I imagine that will land separately.)  One tricky bit is that `rustdoc` is used in two places (one for doc, and one for tests).\r\n\r\nThis will likely need a feature flag (see `features.rs`)."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/405106470", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-405106470", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 405106470, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEwNjQ3MA==", "user": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-15T17:43:13Z", "updated_at": "2018-07-15T17:43:13Z", "author_association": "CONTRIBUTOR", "body": ":umbrella: The latest upstream changes (presumably #5726) made this pull request unmergeable. Please resolve the merge conflicts."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/405359327", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-405359327", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 405359327, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTM1OTMyNw==", "user": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T19:45:59Z", "updated_at": "2018-07-16T19:45:59Z", "author_association": "NONE", "body": "@ehuss Thanks for pointing me to `profiles`, seeing how that's done clears it up a lot.\r\n\r\nThe package override direction was taken from the proposal text in #5034, but maybe I read that wrong or there was a mistake in that, since you're right that having workspaces override packages makes more sense.\r\n\r\nI'll look into the `rustdoc` flags."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/405415838", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-405415838", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 405415838, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTQxNTgzOA==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T23:54:42Z", "updated_at": "2018-07-16T23:54:42Z", "author_association": "CONTRIBUTOR", "body": "I don't think you misread it, different people will have different expectations.  I'm not sure which way is the right way.  I'm just cautioning that it may not be clear how it should work, and that someone on the cargo team might want to clarify it."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/409028657", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-409028657", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 409028657, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAyODY1Nw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-30T22:11:05Z", "updated_at": "2018-07-30T22:11:05Z", "author_association": "MEMBER", "body": "ping @detrumi, have you had a chance to handle some of the follow up comments here?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/409319643", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-409319643", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 409319643, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTMxOTY0Mw==", "user": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-31T18:21:42Z", "updated_at": "2018-07-31T18:21:42Z", "author_association": "NONE", "body": "@alexcrichton Yes, I'm slowly working my way through implementing it."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/411162162", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-411162162", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 411162162, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE2MjE2Mg==", "user": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T18:49:50Z", "updated_at": "2018-08-08T16:23:29Z", "author_association": "NONE", "body": "Some questions:\r\n- How should `-F` (forbid) flags be handled? Workspace lints normally override package lints, but that seems kind of weird for forbidden lints. One option is to let `-F` flags in packages take priority over workspace lints too. However, this would mean that you can't override that lint in the workspace any more, which might be unpractical.\r\n**Edit:** after thinking about it some more, workspace lints should only override packages if they're stricter, as allowing lints while the package treats them as errors would mean that you can make changes to the package that compile while in the workspace, but don't compile for the package on its own.\r\n- There was an idea to warn if you specify an unknown lint name. However, I don't know how to check against that, as we don't have a list of known lints. At the moment, passing an unknown lint results in `rustc` erroring out when Cargo calls it with the lint flags.\r\n- Looking at the Appveyor build of my last commit, an import in the test file I added failed to resolve:\r\n```use cargotest::support::{execs, project};```\r\nThis same line is also used in other test files, and locally I can run the test fine. Am I doing something wrong here?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/411196224", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-411196224", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 411196224, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE5NjIyNA==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T20:45:06Z", "updated_at": "2018-08-07T20:45:06Z", "author_association": "MEMBER", "body": "Others may have a better idea how to handle the flags and such but for the test at least it's been tweaked I think since this started, you should be able to just drop the leading `cargotest::`"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/429677044", "html_url": "https://github.com/rust-lang/cargo/pull/5728#issuecomment-429677044", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5728", "id": 429677044, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3NzA0NA==", "user": {"login": "azriel91", "id": 2993230, "node_id": "MDQ6VXNlcjI5OTMyMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2993230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azriel91", "html_url": "https://github.com/azriel91", "followers_url": "https://api.github.com/users/azriel91/followers", "following_url": "https://api.github.com/users/azriel91/following{/other_user}", "gists_url": "https://api.github.com/users/azriel91/gists{/gist_id}", "starred_url": "https://api.github.com/users/azriel91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azriel91/subscriptions", "organizations_url": "https://api.github.com/users/azriel91/orgs", "repos_url": "https://api.github.com/users/azriel91/repos", "events_url": "https://api.github.com/users/azriel91/events{/privacy}", "received_events_url": "https://api.github.com/users/azriel91/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-15T00:32:39Z", "updated_at": "2018-10-15T00:32:39Z", "author_association": "NONE", "body": "Hiya @detrumi, are you still working on this?\r\nIt would be an awesome feature to have!"}]