[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/426834720", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-426834720", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 426834720, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjgzNDcyMA==", "user": {"login": "rust-highfive", "id": 7378925, "node_id": "MDQ6VXNlcjczNzg5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7378925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-highfive", "html_url": "https://github.com/rust-highfive", "followers_url": "https://api.github.com/users/rust-highfive/followers", "following_url": "https://api.github.com/users/rust-highfive/following{/other_user}", "gists_url": "https://api.github.com/users/rust-highfive/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-highfive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-highfive/subscriptions", "organizations_url": "https://api.github.com/users/rust-highfive/orgs", "repos_url": "https://api.github.com/users/rust-highfive/repos", "events_url": "https://api.github.com/users/rust-highfive/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-highfive/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-03T23:18:49Z", "updated_at": "2018-10-03T23:18:49Z", "author_association": "NONE", "body": "r? @matklad\n\n(rust_highfive has picked a reviewer for you, use r? to override)"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/426834742", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-426834742", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 426834742, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjgzNDc0Mg==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-03T23:18:55Z", "updated_at": "2018-10-03T23:18:55Z", "author_association": "MEMBER", "body": "r? @ehuss "}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/426905077", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-426905077", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 426905077, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjkwNTA3Nw==", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T06:51:49Z", "updated_at": "2018-10-04T06:51:49Z", "author_association": "CONTRIBUTOR", "body": "Can this synchronous work cause Cargo to pause reading bytes from a TCP socket that is in the middle of fetching another HTTP response? Not timing out unnecessarily in the client is good, but it\u2019d also be good if we don\u2019t give servers a reason to time out."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/426910291", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-426910291", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 426910291, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjkxMDI5MQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T07:14:29Z", "updated_at": "2018-10-04T07:14:29Z", "author_association": "MEMBER", "body": "It can indeed! That's where to fix it we'll need to do tarball extraction in parallel."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427244784", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-427244784", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 427244784, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzI0NDc4NA==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-05T04:44:45Z", "updated_at": "2018-10-05T04:44:45Z", "author_association": "CONTRIBUTOR", "body": "I've been looking through this.  I don't think I fully understand the details, but it seems to work.  Would this continue to be necessary if the extraction was done in a separate thread?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427423803", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-427423803", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 427423803, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzQyMzgwMw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-05T16:28:28Z", "updated_at": "2018-10-05T16:28:28Z", "author_association": "MEMBER", "body": "It sort of depend how we'd do extraction, but I think it would be required, yeah. Right now before we actually extract the tarball we reacquire a file lock that was previously dropped after we saw that it didn't exist. This acquisition can take a long time and, if it does, a message is printed to the console saying we're waiting on a lock. We wouldn't want to fork of 5 tarball extractions to all print \"Waiting on ...\" all at once, so I think the main thread will continue to be the one to acquire file locks. \r\n\r\nTo that end we can still have long pauses on the main thread we'll need to account for in timing out.\r\n\r\nI am slightly worried though in that this feature is definitely balooning in complexity quickly, although I'm not sure how that's best handled..."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/429183021", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-429183021", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 429183021, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTE4MzAyMQ==", "user": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-12T02:27:05Z", "updated_at": "2018-10-12T02:27:05Z", "author_association": "CONTRIBUTOR", "body": ":umbrella: The latest upstream changes (presumably #6166) made this pull request unmergeable. Please resolve the merge conflicts."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/429399973", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-429399973", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 429399973, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTM5OTk3Mw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-12T17:25:34Z", "updated_at": "2018-10-12T17:25:34Z", "author_association": "MEMBER", "body": "Rebased!"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430665061", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430665061", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430665061, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY2NTA2MQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T15:02:57Z", "updated_at": "2018-10-17T15:02:57Z", "author_association": "MEMBER", "body": "ping @ehuss, have you had more time to think about this? With the beta cutoff happening soon I think we'll definitely want to merge this or back out parallel donwloads on the beta branch"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430713836", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430713836", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430713836, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcxMzgzNg==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T17:18:08Z", "updated_at": "2018-10-17T17:18:08Z", "author_association": "CONTRIBUTOR", "body": "My concern is that this seems to add a lot of complexity.  If the core issue is that `wait` blocks too long, would an alternative that avoids blocking be reasonable?  I have a prototype that does extraction in the background, and it seems to work well and resolves the original issue.  It also has the benefit that it makes things faster for everyone.  I can probably polish it off in a day or two, although I had some questions about it.\r\n\r\nAlso, I'm not sure if I see it being as critical, since parallel downloads is opt-in, and it only seems to have an issue in a pathological case. Unless I'm missing something?  I would definitely opt to merge this over backing anything out.\r\n"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430729192", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430729192", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430729192, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcyOTE5Mg==", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T18:03:02Z", "updated_at": "2018-10-17T18:03:02Z", "author_association": "CONTRIBUTOR", "body": "> since parallel downloads is opt-in\r\n\r\nIs it? When I hit https://github.com/rust-lang/cargo/issues/6125 I\u2019m pretty sure I had upgraded the toolchain without opting into anything new."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430729640", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430729640", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430729640, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcyOTY0MA==", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T18:04:28Z", "updated_at": "2018-10-17T18:04:28Z", "author_association": "CONTRIBUTOR", "body": "Also you can call this case pathological but it was with a real crate, not a synthetic stress test."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430731086", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430731086", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430731086, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDczMTA4Ng==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T18:08:52Z", "updated_at": "2018-10-17T18:08:52Z", "author_association": "MEMBER", "body": "Oh so I should probably have been more clear, but https://github.com/rust-lang/cargo/pull/6005 actually did enable parallel downloads by default. It just disabled HTTP/2 by default! The parallel downloads part comes about from the restructuring of the code to use curl's `Multi`, and the parallelism by default comes from multiple connections to a domain rather than multiplexing over one connection with HTTP/2.\r\n\r\nThis indeed is a pathological case *if* we have one-at-a-time downloads, but with parallel I think it can actually happen somewhat commonly! \r\n\r\n@ehuss this does remind me, though, that I could work on an alternative patch to switch to one-by-one downloads using the same infrastructure we have now, I think that'd be a much smaller patch compared to this. Do you think that'd be best to land for beta?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430737934", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430737934", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430737934, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDczNzkzNA==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T18:27:50Z", "updated_at": "2018-10-17T18:27:50Z", "author_association": "CONTRIBUTOR", "body": "Ah, for some reason I was thinking it only mattered that the http/2 connection was being held open, but I was mistaken of the other scenario with unfinished transfers in flight.\r\n\r\nI think the background extraction would be the best approach.  It helps everyone, and doesn't look too risky.  Do you not agree?\r\n\r\n(Also, I think being able to configure the concurrency would be good regardless what else we do.)\r\n"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430743142", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430743142", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430743142, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc0MzE0Mg==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T18:43:05Z", "updated_at": "2018-10-17T18:43:05Z", "author_association": "MEMBER", "body": "Yeah background extraction is definitely the best way to go here long term I think, I was just brainstorming other short-term solutions while that's worked on. If you've got it almost ready to go though then we can do that instead!"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430748118", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430748118", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430748118, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc0ODExOA==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T18:57:15Z", "updated_at": "2018-10-17T18:57:15Z", "author_association": "CONTRIBUTOR", "body": "I can probably post it today or tomorrow, and we can see how risky it looks.  I just had some questions, which I guess I'll just ask here:\r\n\r\n1. How generic should `Source`s be?  Right now I implemented it as sending a closure to a thread, which allows the `Source` to decide exactly what to do. However, only one impl really matters (`RegistrySource`), and using closures makes it a little more complex. An alternative is to have the `Source` respond with `(cache_path, src_path, filename)` and the background thread would just be hard-coded to save and extract in those directories. It would be simpler and more straight-forward, but maybe less flexible.  Do either of these approaches sound better?\r\n\r\n2. How detailed should the status bar be?  Right now, after all the downloads are finished, there might be some background extractions in progress.  Right now it just says \"Extracting ...\" without any more details.  The vast majority of the time that status will only display for a fraction of a second.  However, in some cases (very slow hard drive, very large crates), it might be displayed for a few seconds.  Is it worth it to print more information?  If so, I would need to keep track of in-flight extractions (either just a count, or the names)."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430750107", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430750107", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430750107, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc1MDEwNw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T19:03:13Z", "updated_at": "2018-10-17T19:03:13Z", "author_association": "MEMBER", "body": "While `Source` started out as uber-generic it's become much less so over time, so I'd lean towards the simpler solution of just passing a tuple/struct around instead of using generic closures. For the status bar I think just saying \"extracting ...\" is fine! We can always add more detailed information later if necessary"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430877626", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-430877626", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 430877626, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg3NzYyNg==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-18T05:14:21Z", "updated_at": "2018-10-18T05:14:21Z", "author_association": "CONTRIBUTOR", "body": "I spent some time cleaning up my background branch, and decided it is probably too risky. I'm unhappy with the way it turned out.  Some problems I ran into:\r\n* Acquiring a file lock requires holding a `Config` (for shell output to say \"Blocking\") which I don't know how to send that to a thread.  So the file locking is still synchronous.\r\n* The progress bar was a little more tricky than I anticipated.  It now says \"Downloading (extracting...)\" which is unsatisfying.  This could be improved, but would complicate things quite a bit.\r\n* Downloading during builds still blocks for extracting in between each batch through the unit_dependencies loop.  It's better than before, and it shouldn't cause timeout issues (because there shouldn't be any in-flight transfers), but it's a little weird.\r\n* The code still looks quite ugly to me.\r\n\r\nOn the bright side, it does fix the original issue, and it does make things slightly faster (~20% faster for that version of servo on a slow hard drive).  Here's the code if you want to look: https://github.com/ehuss/cargo/commit/872bcb6c016de60881ee8c43d127af7f8b6fc31a  Let me know if you'd still be interested in a PR.\r\n\r\nSo I think I'm r+ this PR if you are OK with it.  Or if you want to do something different, let me know and I'll try to help.  I'm not sure if you meant by the one-by-one comment of just changing the `max_host_connections` or something else.  Sorry for the delay and flip-flopping."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/431024002", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-431024002", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 431024002, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTAyNDAwMg==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-18T14:10:38Z", "updated_at": "2018-10-18T14:10:38Z", "author_association": "MEMBER", "body": "Ok thanks for the info! I'm ok going with this version for now and we can always figure out how to get async extraction later should be fine. I suspect that we'll want to go \"full async\" here eventually and basically have an async event loop (like curl is already) where work for tarball extraction and/or acquiring file locks is all farmed out to this async loop. That means that something like a download would simply return a `Future` from the `Box<Source>` and it'd internally capture everything like file locks, tarball extraction, curl download handling, etc.\r\n\r\nThat's a bit of a larger scale refactor but I think it's probably the best looking implementation in terms of cleanliness and whatnot?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/431024289", "html_url": "https://github.com/rust-lang/cargo/pull/6130#issuecomment-431024289", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6130", "id": 431024289, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTAyNDI4OQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-18T14:11:22Z", "updated_at": "2018-10-18T14:11:22Z", "author_association": "MEMBER", "body": "Oh and for one-by-one it's not actually as easy as I thought it would be to retrofit, but I don't think it'd be the end of the world to throw it in last second."}]