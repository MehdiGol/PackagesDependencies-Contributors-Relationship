[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430668003", "html_url": "https://github.com/rust-lang/cargo/issues/6179#issuecomment-430668003", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6179", "id": 430668003, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY2ODAwMw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T15:10:28Z", "updated_at": "2018-10-17T15:10:28Z", "author_association": "MEMBER", "body": "This seems plausible to me! Cargo has to execute rustc to learn about cfg information for targets, so that may be one roadblock to getting this working but otherwise I think it in theory shouldn't be too too hard to plumb through what we've got today"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430707524", "html_url": "https://github.com/rust-lang/cargo/issues/6179#issuecomment-430707524", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6179", "id": 430707524, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcwNzUyNA==", "user": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T16:58:56Z", "updated_at": "2018-10-17T16:58:56Z", "author_association": "MEMBER", "body": "Similarly, it seems like you could also plumb through the set of features with which each library will be built, so that there's no need to pull in optional dependencies."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430727782", "html_url": "https://github.com/rust-lang/cargo/issues/6179#issuecomment-430727782", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6179", "id": 430727782, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDcyNzc4Mg==", "user": {"login": "luser", "id": 286001, "node_id": "MDQ6VXNlcjI4NjAwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/286001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luser", "html_url": "https://github.com/luser", "followers_url": "https://api.github.com/users/luser/followers", "following_url": "https://api.github.com/users/luser/following{/other_user}", "gists_url": "https://api.github.com/users/luser/gists{/gist_id}", "starred_url": "https://api.github.com/users/luser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luser/subscriptions", "organizations_url": "https://api.github.com/users/luser/orgs", "repos_url": "https://api.github.com/users/luser/repos", "events_url": "https://api.github.com/users/luser/events{/privacy}", "received_events_url": "https://api.github.com/users/luser/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T17:59:08Z", "updated_at": "2018-10-17T17:59:08Z", "author_association": "CONTRIBUTOR", "body": "I poked around that a bit and that already seems to work. If you have a dependency on crate `A` and `A` has an optional dependency on `B`, you won't wind up with `B` in your Cargo.lock unless you enable that feature."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/431544643", "html_url": "https://github.com/rust-lang/cargo/issues/6179#issuecomment-431544643", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6179", "id": 431544643, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTU0NDY0Mw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-20T03:26:03Z", "updated_at": "2018-10-20T03:26:03Z", "author_association": "MEMBER", "body": "cc @Eh2406, we were just talking about this!\r\n\r\nWe talked a bit in person about this and envisioned something like:\r\n\r\n* Each workspace has a default set of targets and a default set of features used to generate a lock file. These both default to \"everything\"\r\n* You can configure a `[workspace]` to either change the default set of features or the default set of targets. This affects lock file resolution. It also would be documented with lots of warnings about the effects of doing this (like thrashing lock files on builds)\r\n* Finally, `--minimal-cargo-lock` would be a CLI flag to say \"ignore configuration, do the minimal thing\"\r\n\r\nWe've already basically got the support for all of this, it'd just need some wiring up and stabilization!"}]