[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427956560", "html_url": "https://github.com/rust-lang/cargo/issues/6124#issuecomment-427956560", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6124", "id": 427956560, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzk1NjU2MA==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-08T19:44:40Z", "updated_at": "2018-10-08T19:44:40Z", "author_association": "MEMBER", "body": "cc @zackmdavis perhaps you could help out here as well?\r\n\r\nI believe https://github.com/rust-lang/rust/pull/52069 started adding the lints that are firing here which look like:\r\n\r\n```\r\nwarning: hidden lifetime parameters in types are deprecated\r\n  --> src/main.rs:33:1\r\n   |\r\n33 | #[get(\"/<turbofish>\")]\r\n   | ^^^^^^^^^^^^^^^^^^^^^^- help: indicate the anonymous lifetime: `<'_>`\r\n```\r\n\r\nWe should have safeguards in place for the compiler to not actually emit any warnings here, but somehow this lint [isn't triggering these safeguards](https://github.com/rust-lang/rust/blob/423d8109868c1f926f2cfcc3bff980c3daa515fd/src/librustc/lint/mod.rs#L735-L762) which means the suggestion isn't getting classified as \"coming from an external macro\", which means that we're not correctly suppressing the suggestion (I think the lint still needs to be emitted though). \r\n\r\n@zackmdavis do you know why this might be getting past that check? Is perhaps the wrong span being used for the suggestion, one which doesn't tie it back to the original macro?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/428037466", "html_url": "https://github.com/rust-lang/cargo/issues/6124#issuecomment-428037466", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6124", "id": 428037466, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODAzNzQ2Ng==", "user": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-09T02:19:52Z", "updated_at": "2018-10-09T02:19:52Z", "author_association": "MEMBER", "body": "(I'll take a look sometime this week.)"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/431249635", "html_url": "https://github.com/rust-lang/cargo/issues/6124#issuecomment-431249635", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6124", "id": 431249635, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTI0OTYzNQ==", "user": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-19T05:32:39Z", "updated_at": "2018-10-19T05:32:39Z", "author_association": "MEMBER", "body": "@alexcrichton \r\n\r\nI added some logging to a stage 2 build to get some more visibility\r\n\r\n```diff\r\ndiff --git a/src/librustc/lint/mod.rs b/src/librustc/lint/mod.rs\r\nindex 3327b11..c9146f6 100644\r\n--- a/src/librustc/lint/mod.rs\r\n+++ b/src/librustc/lint/mod.rs\r\n@@ -619,7 +619,9 @@ pub fn struct_lint_level<'a>(sess: &'a Session,\r\n     // If this code originates in a foreign macro, aka something that this crate\r\n     // did not itself author, then it's likely that there's nothing this crate\r\n     // can do about it. We probably want to skip the lint entirely.\r\n-    if err.span.primary_spans().iter().any(|s| in_external_macro(sess, *s)) {\r\n+    if err.span.primary_spans().iter()\r\n+        .inspect(|&s| warn!(\"span {:?}; in_external_macro {:?}\", s, in_external_macro(sess, *s)))\r\n+        .any(|s| in_external_macro(sess, *s)) {\r\n```\r\n\r\nand the result\u2014\r\n\r\n```\r\n INFO 2018-10-19T05:10:10Z: rustc::lint: span Span { lo: BytePos(459), hi: BytePos(476), ctxt: #0 }; in_external_macro false\r\nwarning: hidden lifetime parameters in types are deprecated                                                           \r\n  --> src/main.rs:28:1                                                                                                \r\n   |                                                                                                                  \r\n28 | #[get(\"/random\")]                                                                                                \r\n   | ^^^^^^^^^^^^^^^^^- help: indicate the anonymous lifetime: `<'_>`\r\n```\r\n\r\n(here `#[get(\"/random\")]` indeed starts 459 bytes into the file, in accordance with the log line)\r\n\r\n\u2014makes me think that the span of the macro attribute itself (which, correctly, doesn't count as coming from a macro) is being passed as the [`path_span` argument to `lower_path_segment`](https://github.com/rust-lang/rust/blob/cb5e1b93e300cf9772a24c6de27d9f21cdae3123/src/librustc/hir/lowering.rs#L1775) during HIR lowering (which argument is where the lint gets its primary span). \r\n\r\nI don't currently know how we would fix this because I don't currently know much about procedural macros."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/431660167", "html_url": "https://github.com/rust-lang/cargo/issues/6124#issuecomment-431660167", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6124", "id": 431660167, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTY2MDE2Nw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-21T11:15:20Z", "updated_at": "2018-10-21T11:15:20Z", "author_association": "MEMBER", "body": "Thanks for taking a look at this @zackmdavis! That makes sense that it's the issue, although I'm also unsure why that would come about to have a span that looks like that. Procedural macros in theory don't have much to do with it other than they're creating pre-HIR ast nodes with \"unusual spans\", but that's always been enough in the past..."}]