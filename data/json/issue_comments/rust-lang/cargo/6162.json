[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/428778661", "html_url": "https://github.com/rust-lang/cargo/issues/6162#issuecomment-428778661", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6162", "id": 428778661, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc3ODY2MQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T00:39:57Z", "updated_at": "2018-10-11T00:39:57Z", "author_association": "MEMBER", "body": "cc @ehuss, I think we were discussing this recently on discord, right? In that this is expected behavior currently, but one that we can indeed fix! (and probably should for dylib outputs at least)"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/428785744", "html_url": "https://github.com/rust-lang/cargo/issues/6162#issuecomment-428785744", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6162", "id": 428785744, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc4NTc0NA==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T01:23:17Z", "updated_at": "2018-10-11T01:23:17Z", "author_association": "CONTRIBUTOR", "body": "I think it was in #6131 where we discussed that uplifting was changed.\r\n\r\nThere are multiple things here:\r\n* build/test/run commands don't clean the target directory.  Artifacts from previous runs normally don't matter, but for shared libs they sometimes do.\r\n* The dylib search path includes the root target dir and the deps target dir, and the root one is taking precedence (swapping them [here](https://github.com/rust-lang/cargo/blob/5dbac98885199bbd7c0f189d7405b5523434d1e3/src/cargo/core/compiler/compilation.rs#L196-L197) fixes this issue)\r\n\r\nWhen we changed uplifting, it was a concern that so's might have issues, but at the time we couldn't think of anything specific.  Looks like we found one! \ud83d\ude04 \r\n\r\nI see three possible solutions:\r\n1. Clean the base target directory before each command runs.  Right now it's a dumping ground.  However, I don't like the sound of this idea.\r\n2. Flip the order of the dylib path mentioned above.\r\n3. Copy all shareable libraries (dylib/cdylib) of dependencies into the target.\r\n\r\nI don't have a preference on which.  2 is super easy, but I don't know the implications.  3 is a little harder, but doable.\r\n"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/429108565", "html_url": "https://github.com/rust-lang/cargo/issues/6162#issuecomment-429108565", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6162", "id": 429108565, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTEwODU2NQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T20:33:48Z", "updated_at": "2018-10-11T20:33:48Z", "author_association": "MEMBER", "body": "Thanks for investigating this @ehuss! Option (2) there sounds like a great way to fix this to me, I definitely don't think we should have much fallout from switching the precedence there and we can always pursue (3) independently later if necessary"}]