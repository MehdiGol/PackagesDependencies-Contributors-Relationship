[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/407074925", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-407074925", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 407074925, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA3NDkyNQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-23T14:20:56Z", "updated_at": "2018-07-23T14:20:56Z", "author_association": "MEMBER", "body": "This seems plausible to me! I don't believe we've had previous requests to change the directories for auto-inference, but I don't see why not!\r\n\r\nRecently we added keys like `autotests = false` to disable automatic inference of test cases, and that seems like we could possibly reuse it for your use case? Something like `autotests = 'my-test-dir'` could look in a different directory for tests, and something like `autotests = ['tests/run-pass', 'tests/compile-fail']` could search multiple dirs perhaps?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/407076227", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-407076227", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 407076227, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA3NjIyNw==", "user": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-23T14:24:51Z", "updated_at": "2018-07-23T14:24:51Z", "author_association": "CONTRIBUTOR", "body": "@alexcrichton Sounds great! I wasn't sure whether we could have different types for one key (bool vs. string vs. array). But if that's possible, that would be great! Then I'd suggest that `autotests` might have the following values:\r\n- `false` (equivalent to `[]`)\r\n- `true` (equivalent to `['tests/']`)\r\n- Array of strings \r\n\r\nHow would we go about implementing this? Does this need an RFC? How are \"unstable\" things handled in Cargo? Would it need a `-Z custom-auto-paths` flag? I could certainly try implementing this!"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/407082253", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-407082253", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 407082253, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA4MjI1Mw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-23T14:42:18Z", "updated_at": "2018-07-23T14:42:18Z", "author_association": "MEMBER", "body": "Seems plausible to me!\r\n\r\nFor implementation that can basically happen at any time, so long as it's a nightly feature. We've got a system for handling unstable nightly-only feautres in Cargo (similar to rustc) and the UI would basically require something like:\r\n\r\n```\r\n# at the top of Cargo.toml\r\ncargo-features = ['this-features-name']\r\n\r\n[package]\r\n# ...\r\nautotests = [...]\r\n```"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/407856343", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-407856343", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 407856343, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg1NjM0Mw==", "user": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-25T18:45:31Z", "updated_at": "2018-07-25T18:45:31Z", "author_association": "CONTRIBUTOR", "body": "@alexcrichton I have a question. So I started working on this and already spotted the place where most changes are necessary: `src/cargo/util/toml/*` in particular `targets.rs`. I tried to understand what this file is doing ... which wasn't trivial thanks to the almost complete lack of comments. So I thought: when I have to invest the time to understand all of this anyway, I can write down my knowledge in form of doc-comments for the functions in `targets.rs`. That's already mostly done.\r\n\r\nBut now after having a rough understanding of the module, I feel like it could use some cleanup. And I don't mean small things, but basically a rewrite of this module. Why? I think the whole code can be significantly shortened and made faster. For example, right now, many functions return `Vec`s that are only used to extend another `Vec` from it. In many places things are cloned to make the borrow checker happy. \r\n\r\nSo my question is: **what is the policy on cleanup/partial rewrite PRs?** So of course, cleanup commits are annoying for files that are frequently changed by many people. This `targets.rs` file is [not changed that often](https://github.com/rust-lang/cargo/commits/master/src/cargo/util/toml/targets.rs). Furthermore, rewrites can of course introduce new bugs that were \"fixed\" before. But of course, shorter and faster code is also good. So yeah, that's my question: would you accept such a PR? Is this something you'd like to get? Or should I rather just concentrate on implementing the feature I requested?\r\n\r\n(if I were to rewrite that module, I would of course write a lot of documentation/comments to clarify things)"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/407943862", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-407943862", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 407943862, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzk0Mzg2Mg==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-26T01:08:20Z", "updated_at": "2018-07-26T01:08:20Z", "author_association": "MEMBER", "body": "Fixes, cleanup, and documentation are all more than welcome! I know @matklad may have some thoughts about this module, but IIRC it's historically a relatively unloved module that would definitely appreciate some love"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/407995285", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-407995285", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 407995285, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzk5NTI4NQ==", "user": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-26T06:51:04Z", "updated_at": "2018-07-26T06:51:04Z", "author_association": "MEMBER", "body": "Yes, we love rewrites for readability! I would be especially thrilled if the `targets.rs` module could be simplified: it's a shame to spend 700 lines of code on something which in theory should be relatively uninvolved. The major reason for this complexity is backwards compatibility: Cargo used to accept pretty random things as crates, and the code goes to the great lengths to preserve that. This is something to keep an eye on during rewrite; luckily, we have a pretty good test coverage of weird cases cases in this area."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/410357762", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-410357762", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 410357762, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM1Nzc2Mg==", "user": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-03T19:46:52Z", "updated_at": "2018-08-13T12:01:35Z", "author_association": "CONTRIBUTOR", "body": "Two things. First, my work on this will be a bit delayed. ~~I have to get other stuff finished before working on this.~~ **Edit**: I won't work on this anytime soon, so please grab this issue if someone is interested!\r\n\r\nSecondly: I initially liked the `autotests = [\"path/to/\"]` approach, but I noticed that it could be more useful/powerful. In particular, consider this:\r\n\r\n```\r\n[[test]]\r\nname = \"foo\"\r\npath = \"tests/foo/*\"\r\n\r\n[[test]]\r\nname = \"bar\"\r\npath = \"tests/bar/*\"\r\nharness = false\r\n```\r\n\r\nSo if we instead let the user add the path to all tests in a `[[test]]` section, other configurations (like `harness`) can be set for all tests in that directory. I think that would actually be useful."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/410370040", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-410370040", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 410370040, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM3MDA0MA==", "user": {"login": "alecmocatta", "id": 1136246, "node_id": "MDQ6VXNlcjExMzYyNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1136246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecmocatta", "html_url": "https://github.com/alecmocatta", "followers_url": "https://api.github.com/users/alecmocatta/followers", "following_url": "https://api.github.com/users/alecmocatta/following{/other_user}", "gists_url": "https://api.github.com/users/alecmocatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecmocatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecmocatta/subscriptions", "organizations_url": "https://api.github.com/users/alecmocatta/orgs", "repos_url": "https://api.github.com/users/alecmocatta/repos", "events_url": "https://api.github.com/users/alecmocatta/events{/privacy}", "received_events_url": "https://api.github.com/users/alecmocatta/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-03T20:38:52Z", "updated_at": "2018-08-03T20:38:52Z", "author_association": "NONE", "body": "A project I'm working on has dozens of tests that need to be run without the harness. Currently they're exhaustively listed with `harness = false` in the Cargo.toml, which is less than ideal due to the added need to keep them matched up.\r\n\r\n> So if we instead let the user add the path to all tests in a [[test]] section, other configurations (like harness) can be set for all tests in that directory. I think that would actually be useful.\r\n\r\nThis would address my use case certainly.\r\n\r\nAs I see it, the expansion to Cargo.toml `[[test]]` section definition is:\r\n* No `name` as this typically doesn't make sense when there'll be multiple names inferred from the multiple resolved paths (all test targets must have unique names);\r\n* A path that can have limited glob functionality.\r\n\r\nThe `name` could be allowed when if the glob path resolves to exactly one location?\r\n\r\nThe logic to special-case ./src/bin, ./examples, ./tests, etc could presumably be moved atop or merged with the work to achieve the above.\r\n\r\nThe other option that would also address my use case is adding another key at the `[package]` level (i.e. alongside `autotests`) that makes the harness opt-in rather than the default opt-out. This is (like `autotests` IMO) a bit inelegant however."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/411069137", "html_url": "https://github.com/rust-lang/cargo/issues/5766#issuecomment-411069137", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5766", "id": 411069137, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTA2OTEzNw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T14:08:02Z", "updated_at": "2018-08-07T14:08:02Z", "author_association": "MEMBER", "body": "@LukasKalbertodt I don't think we have a great way to interpret multiple paths per test though, right now each test in target is a crate (aka one rustc invocation), but multiple paths necessitate multiple crates?\r\n\r\n@alecmocatta your use case definitely makes sense! We may be able to do something like @LukasKalbertodt is mentioning though one way or another to solve that? I'm not entirely sure what it might look like though"}]