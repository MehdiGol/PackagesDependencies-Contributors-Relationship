[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/410529402", "html_url": "https://github.com/rust-lang/cargo/issues/5866#issuecomment-410529402", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5866", "id": 410529402, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDUyOTQwMg==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-05T15:56:16Z", "updated_at": "2018-08-05T15:56:16Z", "author_association": "CONTRIBUTOR", "body": "This is similar to #3670.\r\n\r\nDo you explicitly need to use `cargo metadata`?  One option is to use `cargo build --message-format=json` which will tell you the full path names (included exe suffix)."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/410541275", "html_url": "https://github.com/rust-lang/cargo/issues/5866#issuecomment-410541275", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5866", "id": 410541275, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU0MTI3NQ==", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars0.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-05T19:14:08Z", "updated_at": "2018-08-05T19:14:08Z", "author_association": "CONTRIBUTOR", "body": "Yes, it's preferred as I want to set up my config/paths before running the build. I also have an option to let user call the build themselves and just let me pack the results, so even build output wouldn't be sufficient in all cases."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/411007043", "html_url": "https://github.com/rust-lang/cargo/issues/5866#issuecomment-411007043", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5866", "id": 411007043, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTAwNzA0Mw==", "user": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T10:13:36Z", "updated_at": "2018-08-07T10:13:36Z", "author_association": "MEMBER", "body": "@kornelski curious, would `--out-dir` help here? Running `cargo build -Z unstable-options --out-dir ./out --bin foo` puts the binary to the `./out` dir, and you can grab it from there. \r\n\r\nThe \"binary name\" is a tricky business, because binary is not necessary a single file. Debug info might be a separate file, and I believe at least at some point WASM targter generated a `.wasm` and `.js` files for a binary. "}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/411030808", "html_url": "https://github.com/rust-lang/cargo/issues/5866#issuecomment-411030808", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5866", "id": 411030808, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTAzMDgwOA==", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars0.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T11:55:37Z", "updated_at": "2018-08-07T11:55:37Z", "author_association": "CONTRIBUTOR", "body": "Nah, it's hacky. I'd have to scan the directory and guess what is a main binary and what is some debug or temp file.\r\n\r\nCould you expose something like:\r\n\r\n```json\r\n\"main_binary\": \"target/triple/release/file.exe\",\r\n\"auxiliary_files\": [\"target/triple/release/file.dsym\"],\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/411032259", "html_url": "https://github.com/rust-lang/cargo/issues/5866#issuecomment-411032259", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5866", "id": 411032259, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTAzMjI1OQ==", "user": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T12:01:59Z", "updated_at": "2018-08-07T12:01:59Z", "author_association": "MEMBER", "body": ">what is some debug or temp file.\r\n\r\n`--out-dir` does not produce temp files. Ie, it's completely not like the `target` dir, which **is** a kitchen sink. It does include debug-info though, and there's no non-hacky solutions to filter that out (except for not producing a debug info in the first place)."}]