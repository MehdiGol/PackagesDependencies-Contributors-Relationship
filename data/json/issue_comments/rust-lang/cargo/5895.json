[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/413034561", "html_url": "https://github.com/rust-lang/cargo/issues/5895#issuecomment-413034561", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5895", "id": 413034561, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzAzNDU2MQ==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-14T22:19:38Z", "updated_at": "2018-08-14T22:19:38Z", "author_association": "CONTRIBUTOR", "body": "The typical way to deal with this is to run `cargo metadata` and inspect the `workspace_root` value to determine the base path for all relative paths (regardless if it's in a workspace or not).  I'm not sure what emacs package you are using, but the one I'm aware of does this (https://github.com/kwrooijen/cargo.el/blob/c995b42e2c0fc609d265286ce465d508d81b8a4d/cargo-process.el#L243-L251).  I'm not terribly familiar with emacs, but maybe this is an issue with the package?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/413123273", "html_url": "https://github.com/rust-lang/cargo/issues/5895#issuecomment-413123273", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5895", "id": 413123273, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzEyMzI3Mw==", "user": {"login": "dwijnand", "id": 344610, "node_id": "MDQ6VXNlcjM0NDYxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/344610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwijnand", "html_url": "https://github.com/dwijnand", "followers_url": "https://api.github.com/users/dwijnand/followers", "following_url": "https://api.github.com/users/dwijnand/following{/other_user}", "gists_url": "https://api.github.com/users/dwijnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwijnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwijnand/subscriptions", "organizations_url": "https://api.github.com/users/dwijnand/orgs", "repos_url": "https://api.github.com/users/dwijnand/repos", "events_url": "https://api.github.com/users/dwijnand/events{/privacy}", "received_events_url": "https://api.github.com/users/dwijnand/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-15T07:58:46Z", "updated_at": "2018-08-15T07:58:46Z", "author_association": "MEMBER", "body": "Another solution could be implementing #5450."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/413266460", "html_url": "https://github.com/rust-lang/cargo/issues/5895#issuecomment-413266460", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5895", "id": 413266460, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzI2NjQ2MA==", "user": {"login": "jimblandy", "id": 751272, "node_id": "MDQ6VXNlcjc1MTI3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/751272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimblandy", "html_url": "https://github.com/jimblandy", "followers_url": "https://api.github.com/users/jimblandy/followers", "following_url": "https://api.github.com/users/jimblandy/following{/other_user}", "gists_url": "https://api.github.com/users/jimblandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimblandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimblandy/subscriptions", "organizations_url": "https://api.github.com/users/jimblandy/orgs", "repos_url": "https://api.github.com/users/jimblandy/repos", "events_url": "https://api.github.com/users/jimblandy/events{/privacy}", "received_events_url": "https://api.github.com/users/jimblandy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-15T17:09:39Z", "updated_at": "2018-08-15T17:17:49Z", "author_association": "NONE", "body": "I talked with @alexcrichton this morning. He didn't see a problem with simply having cargo consistently run rustc from the top directory of the crate being compiled, instead of running it sometimes from the crate's top directory, and sometimes from the workspace. The only concern he raised was that the paths in the debug info are affected by the paths passed to rustc.\r\n\r\nI am using cargo.el for other cases. But the basic Emacs tools ought to work, and it seems easy enough for cargo to give it what it needs.\r\n\r\n[edit: the standard Emacs distribution includes a package `compile.el`, which is what people generally use for running compilations within Emacs. It has the usual jump-to-error and next-error commands. It parses lines like the 'Entering directory' and 'Leaving directory' lines that recursive makefiles produce, to track the base directory to which error message paths are relative. Since it's in the stock distribution, it's the tool most Emacs users are familiar with, and it supports many other compilers, it would be very nice for it to work with Rust too.]"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/413266760", "html_url": "https://github.com/rust-lang/cargo/issues/5895#issuecomment-413266760", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5895", "id": 413266760, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzI2Njc2MA==", "user": {"login": "jimblandy", "id": 751272, "node_id": "MDQ6VXNlcjc1MTI3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/751272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimblandy", "html_url": "https://github.com/jimblandy", "followers_url": "https://api.github.com/users/jimblandy/followers", "following_url": "https://api.github.com/users/jimblandy/following{/other_user}", "gists_url": "https://api.github.com/users/jimblandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimblandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimblandy/subscriptions", "organizations_url": "https://api.github.com/users/jimblandy/orgs", "repos_url": "https://api.github.com/users/jimblandy/repos", "events_url": "https://api.github.com/users/jimblandy/events{/privacy}", "received_events_url": "https://api.github.com/users/jimblandy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-15T17:10:37Z", "updated_at": "2018-08-15T17:10:37Z", "author_association": "NONE", "body": "> Another solution could be implementing #5450.\r\n\r\nYes, that might be good too."}]