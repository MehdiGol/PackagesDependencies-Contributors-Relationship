[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427061250", "html_url": "https://github.com/rust-lang/cargo/issues/6131#issuecomment-427061250", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6131", "id": 427061250, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA2MTI1MA==", "user": {"login": "dwijnand", "id": 344610, "node_id": "MDQ6VXNlcjM0NDYxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/344610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwijnand", "html_url": "https://github.com/dwijnand", "followers_url": "https://api.github.com/users/dwijnand/followers", "following_url": "https://api.github.com/users/dwijnand/following{/other_user}", "gists_url": "https://api.github.com/users/dwijnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwijnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwijnand/subscriptions", "organizations_url": "https://api.github.com/users/dwijnand/orgs", "repos_url": "https://api.github.com/users/dwijnand/repos", "events_url": "https://api.github.com/users/dwijnand/events{/privacy}", "received_events_url": "https://api.github.com/users/dwijnand/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T15:24:22Z", "updated_at": "2018-10-04T15:24:22Z", "author_association": "MEMBER", "body": "I wonder: why is this a problem?\r\n\r\nMy thinking is, if `cargo test` correctly runs the tests, but in doing so doesn't create `libfoo.rlib`, isn't that kind of cargo's implementation details?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427062720", "html_url": "https://github.com/rust-lang/cargo/issues/6131#issuecomment-427062720", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6131", "id": 427062720, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA2MjcyMA==", "user": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T15:28:19Z", "updated_at": "2018-10-04T15:28:19Z", "author_association": "CONTRIBUTOR", "body": "Mhhh maybe? \r\n\r\nThe reason I noticed this is because I am writing my own test runners which call rustc with an `--extern` parameter. There I pass the path to my library (the `.rlib` file). So for my test runners it is important that this file exists.\r\n\r\nOf course, maybe I shouldn't use this file as it's implementation detail. That would be fine. So far I've been using the build-plan feature to get the correct path. *But* I still think it's strange that `cargo test` doesn't run a normal `cargo build` beforehand. *I* think it's surprising and not what the user would expect. "}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427070463", "html_url": "https://github.com/rust-lang/cargo/issues/6131#issuecomment-427070463", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6131", "id": 427070463, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA3MDQ2Mw==", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T15:49:51Z", "updated_at": "2018-10-04T15:49:51Z", "author_association": "CONTRIBUTOR", "body": "Perhaps you need something like\r\n````toml\r\n[lib]\r\nname = \"foo\"\r\npath = \"src/lib.rs\"\r\ntest = true #  <-\r\n````"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427091059", "html_url": "https://github.com/rust-lang/cargo/issues/6131#issuecomment-427091059", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6131", "id": 427091059, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA5MTA1OQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T16:50:41Z", "updated_at": "2018-10-04T16:50:41Z", "author_association": "MEMBER", "body": "Interesting! I don't think it's necessarily problematic that we don't do this but I don't see a great reason to *not* create these artifacts. Seems good to me to fix!"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427106471", "html_url": "https://github.com/rust-lang/cargo/issues/6131#issuecomment-427106471", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6131", "id": 427106471, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzEwNjQ3MQ==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T17:38:00Z", "updated_at": "2018-10-04T17:38:00Z", "author_association": "CONTRIBUTOR", "body": "I think this is behaving as expected.  This is a result of #5460.  Because the lib is not an explicit target in this case, it is not uplifted out of `deps`.  Previously @alexcrichton you said that you didn't think `rlib` should *ever* be uplifted, so changing that would be the opposite of the direction you previously  indicated.  I think in this case using the true path in `deps` is the correct thing to do."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427175218", "html_url": "https://github.com/rust-lang/cargo/issues/6131#issuecomment-427175218", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6131", "id": 427175218, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE3NTIxOA==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T21:26:43Z", "updated_at": "2018-10-04T21:26:43Z", "author_association": "MEMBER", "body": "Heh I do flip flop a bit. If it can be made to work *without* uplifting then we shouldn't implement this, but if uplifting is required then I don't think it should be too much of a problem to do so."}]