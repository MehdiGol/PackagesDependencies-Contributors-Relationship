[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/426637105", "html_url": "https://github.com/rust-lang/cargo/issues/6125#issuecomment-426637105", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6125", "id": 426637105, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjYzNzEwNQ==", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-03T13:28:03Z", "updated_at": "2018-10-03T13:28:03Z", "author_association": "CONTRIBUTOR", "body": "Updating the `influent` crate from version 0.4.0 (which accidentally included 22095 unnecessary files) allows `cargo fetch` to complete. Using a Servo commit like `021a24d5bb8dc54bc4496b528d821f11aa3ca745` before the update https://github.com/servo/servo/pull/21865 or using `influent` 0.4.0 in a synthetic test case should help reproduce the problem."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/426713418", "html_url": "https://github.com/rust-lang/cargo/issues/6125#issuecomment-426713418", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6125", "id": 426713418, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjcxMzQxOA==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-03T16:54:47Z", "updated_at": "2018-10-03T16:54:47Z", "author_association": "MEMBER", "body": "Oh dear sounds bad! This is almost for sure caused by https://github.com/rust-lang/cargo/pull/6005 and the restructuring of how we're using curl to download crates.\r\n\r\nI believe the problem here is that the new strategy is \"create a set of a bunch of transfers\" and then we finish them (synchronously) one-by-one. While we're finishing a transfer all the other transfers presumably still have their timeout clocks still running, which means once the slow filesystem finishes all the transfers have \"timed out\". A bug in Cargo's configuration of libcurl!\r\n\r\nThere's a few ways we could solve this:\r\n\r\n* One is to use libcurl APIs to tweak timers. I've posted to their mailing list to clarify whether that'll work in this strategy or not. (or if there's an easier approach)\r\n* Another is to do tarball extraction and writing to the filesystem asynchronously. In addition to not being a trivial change I think this probably still won't account for filesystem locks (we need to lock the destination when writing it out) which shouldn't happen asynchronously (don't want Cargo to print out tons of \"locking\" messages!). To that end this will probably solve the \"only one Cargo in use\" use case but wouldn't solve the concurrent Cargo use case.\r\n\r\nIn any case, I'll try to get this fixed soon!"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/426834763", "html_url": "https://github.com/rust-lang/cargo/issues/6125#issuecomment-426834763", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6125", "id": 426834763, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjgzNDc2Mw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-03T23:19:02Z", "updated_at": "2018-10-03T23:19:02Z", "author_association": "MEMBER", "body": "Ok I think this should be fixed by https://github.com/rust-lang/cargo/pull/6130"}]