[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/428439395", "html_url": "https://github.com/rust-lang/cargo/issues/6159#issuecomment-428439395", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6159", "id": 428439395, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQzOTM5NQ==", "user": {"login": "Walther", "id": 2943750, "node_id": "MDQ6VXNlcjI5NDM3NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2943750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Walther", "html_url": "https://github.com/Walther", "followers_url": "https://api.github.com/users/Walther/followers", "following_url": "https://api.github.com/users/Walther/following{/other_user}", "gists_url": "https://api.github.com/users/Walther/gists{/gist_id}", "starred_url": "https://api.github.com/users/Walther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Walther/subscriptions", "organizations_url": "https://api.github.com/users/Walther/orgs", "repos_url": "https://api.github.com/users/Walther/repos", "events_url": "https://api.github.com/users/Walther/events{/privacy}", "received_events_url": "https://api.github.com/users/Walther/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T05:06:59Z", "updated_at": "2018-10-10T05:24:03Z", "author_association": "NONE", "body": "Looking at https://github.com/rust-lang/cargo/blob/5dbac98885199bbd7c0f189d7405b5523434d1e3/src/cargo/core/manifest.rs#L647-L658 it seems there's a heavy assumption that examples will only ever be libraries.\r\n\r\nIf one changes the type signature to `Vec<TargetKind>`, line 655 `TargetKind::ExampleLib(crate_targets)` errors because `ExampleLib` cannot take `TargetKind` as an input. Additionally, there's a new error in line 355 https://github.com/rust-lang/cargo/blob/90fc9f620190d5fa3c80b0c8c65a1e1361e6b8ae/src/cargo/util/toml/targets.rs#L328-L371 caused by the `.into()` call:\r\n\r\n```\r\nthe trait `std::convert::From<&std::string::String>` is not implemented for `core::manifest::TargetKind`\r\n```\r\n\r\n---\r\n\r\nHow should this be handled?\r\n- Should we change the type of `crate_targets` in `fn example_target()`, and implement the conversion from string to `TargetKind` as well? How could that be done cleanly, with minimal repetition ref. `LibKind`'s conversion method?\r\n- Should we instead create some sort of an `ExampleKind` wrapper so that within `fn clean_examples()` method in `targets.rs` the `into()` call can be more restricted?\r\n- Should we just keep the type as `crate_targets: Vec<LibKind>,` and blindly rely on the `LibKind::Other` -catch-all in the conversion, and parse for an `Other`-type and see if it contains a \"bin\" value? This would feel a bit dirty. On the other hand, that's exactly the codepath that is happening right now for examples with \"bin\" declared as the type\r\n- On an even broader scope, how should we handle these `crate_targets` being `Vec`'s - is it valid to have an example with both \"lib\" and \"bin\" target? What should happen then? What about possible other lists of targets?\r\n\r\n---\r\n\r\n(Additionally, while looking through the code, it seems that `LibKind` type doesn't even know about [cdylib](https://github.com/rust-lang/rust/pull/33553) at all in `manifest.rs`. Should it?  If so, that's probably a subject for a new issue? )"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/428777437", "html_url": "https://github.com/rust-lang/cargo/issues/6159#issuecomment-428777437", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6159", "id": 428777437, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc3NzQzNw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T00:32:00Z", "updated_at": "2018-10-11T00:32:00Z", "author_association": "MEMBER", "body": "Thanks for the report, this definitely sounds like a bug! I agree that we should do some actual parsing here and realize that the string `bin` is a binary, not actually a library.\r\n\r\nI'd be down for basically any fix that works here, feel free to refactor as necessary!"}]