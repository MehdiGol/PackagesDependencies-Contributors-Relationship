[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423361695", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423361695", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423361695, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzM2MTY5NQ==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-20T23:02:49Z", "updated_at": "2018-09-20T23:02:49Z", "author_association": "CONTRIBUTOR", "body": "@d3rped which version of rust are you using and which platform are you on (linux, windows, etc.).\r\n\r\nThe previous behavior (in order of what is attempted):\r\n* Linux: `BROWSER`, `xdg-open`, `gnome-open`, `kde-open`\r\n* Windows: `cmd /C`\r\n* Mac: `open`\r\n\r\nStarting in rust 1.30 (beta), a new strategy is used which is a bit more complex.\r\n"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423367425", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423367425", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423367425, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzM2NzQyNQ==", "user": {"login": "d3rped", "id": 9890209, "node_id": "MDQ6VXNlcjk4OTAyMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9890209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d3rped", "html_url": "https://github.com/d3rped", "followers_url": "https://api.github.com/users/d3rped/followers", "following_url": "https://api.github.com/users/d3rped/following{/other_user}", "gists_url": "https://api.github.com/users/d3rped/gists{/gist_id}", "starred_url": "https://api.github.com/users/d3rped/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d3rped/subscriptions", "organizations_url": "https://api.github.com/users/d3rped/orgs", "repos_url": "https://api.github.com/users/d3rped/repos", "events_url": "https://api.github.com/users/d3rped/events{/privacy}", "received_events_url": "https://api.github.com/users/d3rped/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-20T23:36:04Z", "updated_at": "2018-09-20T23:42:40Z", "author_association": "NONE", "body": "I'm using Linux (NixOS).\r\nThats weird... when I use the current nightly version from rustup (cargo 1.30.0-nightly (a5d829494 2018-09-13)) it does not work; however, when I use cargo from the mozilla rust overlay:\r\n```\r\n{ mozilla ? import (builtins.fetchTarball https://github.com/mozilla/nixpkgs-mozilla/archive/master.tar.gz) }:\r\n\r\nwith import <nixpkgs> { overlays = [ mozilla ]; };\r\n\r\nstdenv.mkDerivation rec {\r\n  name = \"rust-env\";\r\n  buildInputs = [\r\n    (rustChannelOf { date = \"2018-07-24\"; channel = \"nightly\"; }).rust\r\n    pkgconfig openssl\r\n  ];\r\n\r\n  LD_LIBRARY_PATH = \"/run/opengl-driver/lib:\" + lib.makeLibraryPath buildInputs;  \r\n  RUST_BACKTRACE = 1;\r\n}\r\n```\r\nIt respects the environment variable.\r\n\r\nInstalling the same version with rustup it works as well....\r\nI guess something is broken in the current nightly....\r\nMaybe that's related to https://github.com/rust-lang/rust/issues/52873"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423376805", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423376805", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423376805, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzM3NjgwNQ==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-21T00:33:41Z", "updated_at": "2018-09-21T00:33:41Z", "author_association": "CONTRIBUTOR", "body": "The older nightly version you are referencing (2018-07-24) was before the new behavior was introduced.  The latest nightly uses `xdg-open` on linux to figure out how to open the browser.  I think you'll need to set the default browser in the system settings (\"Default Applications > Web Browser\" I think).\r\n\r\n@alexcrichton @Seeker14491 What is the motivation for having the BROWSER environment variable be lowest priority?  Normally, to me, environment variables should be highest, overriding all other settings."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423388932", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423388932", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423388932, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzM4ODkzMg==", "user": {"login": "Seeker14491", "id": 6490497, "node_id": "MDQ6VXNlcjY0OTA0OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6490497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seeker14491", "html_url": "https://github.com/Seeker14491", "followers_url": "https://api.github.com/users/Seeker14491/followers", "following_url": "https://api.github.com/users/Seeker14491/following{/other_user}", "gists_url": "https://api.github.com/users/Seeker14491/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seeker14491/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seeker14491/subscriptions", "organizations_url": "https://api.github.com/users/Seeker14491/orgs", "repos_url": "https://api.github.com/users/Seeker14491/repos", "events_url": "https://api.github.com/users/Seeker14491/events{/privacy}", "received_events_url": "https://api.github.com/users/Seeker14491/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-21T01:55:28Z", "updated_at": "2018-09-21T01:55:28Z", "author_association": "CONTRIBUTOR", "body": "This behavior is the result of https://github.com/rust-lang/cargo/pull/5888, which modified Cargo to use the [opener crate](https://crates.io/crates/opener) I wrote. The idea was to pull out the browser-opening functionality of Cargo and rustup out into a crate to reduce code duplication. `opener` hasn't been integrated into rustup yet, as there were some issues to sort out in rustup first.\r\n\r\nThere were several factors that influenced the choice of not having the `$BROWSER` override:\r\n\r\n- In the old version, the override was only implemented on Linux, making it inconsistent with Windows and Mac.\r\n- `xdg-open` chooses to use `$BROWSER` as a fallback. It seemed redundant to add in our own `$BROWSER` check infront of `xdg-open`. \r\n- The override seemed very niche; I imagine you'd almost always want to open docs in your default browser. @d3rped can you explain your use case?\r\n- I took inspiration from the [opn](https://github.com/sindresorhus/opn) library, which doesn't use a `$BROWSER` override\r\n- The override adds complexity to the implementation and can lead to inconsistencies. For example, the implementation in Cargo didn't handle having multiple colon-separated browsers listed in `$BROWSER`, while the implementation in rustup does.\r\n\r\nAnyways, I'd like to hear everyone's thoughts on this.\r\n\r\n@TheNeikos wrote the [pull request](https://github.com/rust-lang/cargo/commit/aa3399d489f8d1bb269f8df4d2def19571f7560a) to Cargo adding the `$BROWSER` override, and @naufraghi [to rustup](https://github.com/rust-lang-nursery/rustup.rs/commit/e73553864075becffe1bb6c27f040b6d3d5a9eae). Maybe they have some thoughts on this?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423401540", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423401540", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423401540, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzQwMTU0MA==", "user": {"login": "d3rped", "id": 9890209, "node_id": "MDQ6VXNlcjk4OTAyMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9890209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d3rped", "html_url": "https://github.com/d3rped", "followers_url": "https://api.github.com/users/d3rped/followers", "following_url": "https://api.github.com/users/d3rped/following{/other_user}", "gists_url": "https://api.github.com/users/d3rped/gists{/gist_id}", "starred_url": "https://api.github.com/users/d3rped/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d3rped/subscriptions", "organizations_url": "https://api.github.com/users/d3rped/orgs", "repos_url": "https://api.github.com/users/d3rped/repos", "events_url": "https://api.github.com/users/d3rped/events{/privacy}", "received_events_url": "https://api.github.com/users/d3rped/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-21T03:22:26Z", "updated_at": "2018-09-21T03:22:26Z", "author_association": "NONE", "body": "Here are a few reasons why I'd like to use a different browser:\r\n- most of the time I've got 100+ Tabs open in firefox -> consumes less resources\r\n- I don't want to get distracted\r\n- that's kind of a dumb reason but I like the default scrolling behavior (with touchpads) of chromium (no smooth scrolling/no scrolling delay)\r\n\r\nAlternatively I could just add a second profile to firefox."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423423734", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423423734", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423423734, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzQyMzczNA==", "user": {"login": "TheNeikos", "id": 1631166, "node_id": "MDQ6VXNlcjE2MzExNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1631166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheNeikos", "html_url": "https://github.com/TheNeikos", "followers_url": "https://api.github.com/users/TheNeikos/followers", "following_url": "https://api.github.com/users/TheNeikos/following{/other_user}", "gists_url": "https://api.github.com/users/TheNeikos/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheNeikos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheNeikos/subscriptions", "organizations_url": "https://api.github.com/users/TheNeikos/orgs", "repos_url": "https://api.github.com/users/TheNeikos/repos", "events_url": "https://api.github.com/users/TheNeikos/events{/privacy}", "received_events_url": "https://api.github.com/users/TheNeikos/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-21T06:06:52Z", "updated_at": "2018-09-21T06:06:52Z", "author_association": "CONTRIBUTOR", "body": "I have initially written the PR because I strongly believe that ENV variables configuration should be respected before other programs are consulted. Similar to \u201c$EDITOR\u201d. I personally don\u2019t use xdg-open (unless another\u2019s program forces it) so by having it respect my browser I can be sure that it does what I want at the moment.\r\n\r\nConfiguring xdg-open is a pain though.\r\n\r\nA possible alternative could be adding a switch specifying the browser? Or maybe return a URL that could be piped."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423437093", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423437093", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423437093, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzQzNzA5Mw==", "user": {"login": "naufraghi", "id": 106029, "node_id": "MDQ6VXNlcjEwNjAyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/106029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naufraghi", "html_url": "https://github.com/naufraghi", "followers_url": "https://api.github.com/users/naufraghi/followers", "following_url": "https://api.github.com/users/naufraghi/following{/other_user}", "gists_url": "https://api.github.com/users/naufraghi/gists{/gist_id}", "starred_url": "https://api.github.com/users/naufraghi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naufraghi/subscriptions", "organizations_url": "https://api.github.com/users/naufraghi/orgs", "repos_url": "https://api.github.com/users/naufraghi/repos", "events_url": "https://api.github.com/users/naufraghi/events{/privacy}", "received_events_url": "https://api.github.com/users/naufraghi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-21T07:12:09Z", "updated_at": "2018-09-21T07:12:09Z", "author_association": "NONE", "body": "I proposed the PR in `rustup` for similar reasons, sometime I'd like to override locally the defaults (partly because I discovered just now that `xdg-open` uses the `BROWSER` variable).\r\n\r\nBut the same I think the ENV should be considered each time the code operates on a closed set of options, so that there is some way to escape from the loop in unsupported conditions without messing the PATH."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423660773", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423660773", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423660773, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzY2MDc3Mw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-21T20:25:53Z", "updated_at": "2018-09-21T20:25:53Z", "author_association": "MEMBER", "body": "It seems reasonable to me to support `BROWSER` either explicitly in Cargo to transitively in the crate we use, PRs are of course always welcome!"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/423683989", "html_url": "https://github.com/rust-lang/cargo/issues/6064#issuecomment-423683989", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6064", "id": 423683989, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzY4Mzk4OQ==", "user": {"login": "Seeker14491", "id": 6490497, "node_id": "MDQ6VXNlcjY0OTA0OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6490497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seeker14491", "html_url": "https://github.com/Seeker14491", "followers_url": "https://api.github.com/users/Seeker14491/followers", "following_url": "https://api.github.com/users/Seeker14491/following{/other_user}", "gists_url": "https://api.github.com/users/Seeker14491/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seeker14491/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seeker14491/subscriptions", "organizations_url": "https://api.github.com/users/Seeker14491/orgs", "repos_url": "https://api.github.com/users/Seeker14491/repos", "events_url": "https://api.github.com/users/Seeker14491/events{/privacy}", "received_events_url": "https://api.github.com/users/Seeker14491/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-21T22:08:26Z", "updated_at": "2018-09-21T22:08:26Z", "author_association": "CONTRIBUTOR", "body": "If we want to support this, we should implement it in the `opener` crate. We should also implement the override for all platforms."}]