[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427583109", "html_url": "https://github.com/rust-lang/cargo/issues/6144#issuecomment-427583109", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6144", "id": 427583109, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU4MzEwOQ==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-06T15:32:36Z", "updated_at": "2018-10-06T15:32:36Z", "author_association": "CONTRIBUTOR", "body": "It sounds like it would be quite difficult since the TOML information is discarded immediately after parsing.  What kind of API are you interested in?  Do you want `Error` objects with extra fields returned from `compile_with_exec`?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427585034", "html_url": "https://github.com/rust-lang/cargo/issues/6144#issuecomment-427585034", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6144", "id": 427585034, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU4NTAzNA==", "user": {"login": "alexheretic", "id": 2331607, "node_id": "MDQ6VXNlcjIzMzE2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2331607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexheretic", "html_url": "https://github.com/alexheretic", "followers_url": "https://api.github.com/users/alexheretic/followers", "following_url": "https://api.github.com/users/alexheretic/following{/other_user}", "gists_url": "https://api.github.com/users/alexheretic/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexheretic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexheretic/subscriptions", "organizations_url": "https://api.github.com/users/alexheretic/orgs", "repos_url": "https://api.github.com/users/alexheretic/repos", "events_url": "https://api.github.com/users/alexheretic/events{/privacy}", "received_events_url": "https://api.github.com/users/alexheretic/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-06T15:59:51Z", "updated_at": "2018-10-06T15:59:51Z", "author_association": "MEMBER", "body": "I can see source info is lost in deserialization, though the manifest path would still be very useful.\r\n\r\nMaybe a method in `CargoError`\r\n```rust\r\npub fn manifest_path(&self) -> Option<Path>\r\n```\r\n\r\nThis means we can highlight a specific workspace manifest rather than the root, or guessing from the message. For deserialise errors this actually gives me everything I need, as I have `line_col`."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427590857", "html_url": "https://github.com/rust-lang/cargo/issues/6144#issuecomment-427590857", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6144", "id": 427590857, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU5MDg1Nw==", "user": {"login": "alexheretic", "id": 2331607, "node_id": "MDQ6VXNlcjIzMzE2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2331607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexheretic", "html_url": "https://github.com/alexheretic", "followers_url": "https://api.github.com/users/alexheretic/followers", "following_url": "https://api.github.com/users/alexheretic/following{/other_user}", "gists_url": "https://api.github.com/users/alexheretic/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexheretic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexheretic/subscriptions", "organizations_url": "https://api.github.com/users/alexheretic/orgs", "repos_url": "https://api.github.com/users/alexheretic/repos", "events_url": "https://api.github.com/users/alexheretic/events{/privacy}", "received_events_url": "https://api.github.com/users/alexheretic/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-06T17:13:53Z", "updated_at": "2018-10-06T17:13:53Z", "author_association": "MEMBER", "body": "Ok I see now `CargoError` is just a `failure::Error`. But some way of getting the manifest path from `compile_with_exec` errors is what I'm after."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427592782", "html_url": "https://github.com/rust-lang/cargo/issues/6144#issuecomment-427592782", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6144", "id": 427592782, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU5Mjc4Mg==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-06T17:38:18Z", "updated_at": "2018-10-06T17:38:18Z", "author_association": "MEMBER", "body": "The `toml` crate awhile back got [support for `Spanned<T>`](https://github.com/alexcrichton/toml-rs/pull/239) which means we now have the capability to preserve span information beyond deserialization (yay!)\r\n\r\nI think the fix here would probably be to annotate some TOML fields that we deserialize with `Spanned<T>` and then if an error happens when processing that field we've got the span information to resolve to a file/line number"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430986734", "html_url": "https://github.com/rust-lang/cargo/issues/6144#issuecomment-430986734", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6144", "id": 430986734, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDk4NjczNA==", "user": {"login": "alexheretic", "id": 2331607, "node_id": "MDQ6VXNlcjIzMzE2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2331607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexheretic", "html_url": "https://github.com/alexheretic", "followers_url": "https://api.github.com/users/alexheretic/followers", "following_url": "https://api.github.com/users/alexheretic/following{/other_user}", "gists_url": "https://api.github.com/users/alexheretic/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexheretic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexheretic/subscriptions", "organizations_url": "https://api.github.com/users/alexheretic/orgs", "repos_url": "https://api.github.com/users/alexheretic/repos", "events_url": "https://api.github.com/users/alexheretic/events{/privacy}", "received_events_url": "https://api.github.com/users/alexheretic/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-18T12:18:59Z", "updated_at": "2018-10-18T12:18:59Z", "author_association": "MEMBER", "body": "We now have a decent way to pick the workspace member manifest with `ManifestError`s & `ResolveError`s, this covers a decent bunch of cases.\r\n\r\nThough outside of `toml::de::Error`s, I'm still highlighting the whole manifest.\r\n\r\nIn general, I think it would be better for cargo to have errors with info via methods and have this info built into an error string as late as possible. This would give lib users much more to work with. But as cargo is mostly a cli project I can see why we are where we are.\r\n\r\nEnriching the new errors with info and adding new ones if necessary is probably the way forward."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/431025176", "html_url": "https://github.com/rust-lang/cargo/issues/6144#issuecomment-431025176", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6144", "id": 431025176, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTAyNTE3Ng==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-18T14:13:44Z", "updated_at": "2018-10-18T14:13:44Z", "author_association": "MEMBER", "body": "That sounds like a good strategy to me! I'm all for improving Cargo's library experience as well :)"}]