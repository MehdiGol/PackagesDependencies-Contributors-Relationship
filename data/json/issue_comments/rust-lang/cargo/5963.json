[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/418175905", "html_url": "https://github.com/rust-lang/cargo/issues/5963#issuecomment-418175905", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5963", "id": 418175905, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODE3NTkwNQ==", "user": {"login": "nbigaouette", "id": 112988, "node_id": "MDQ6VXNlcjExMjk4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/112988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbigaouette", "html_url": "https://github.com/nbigaouette", "followers_url": "https://api.github.com/users/nbigaouette/followers", "following_url": "https://api.github.com/users/nbigaouette/following{/other_user}", "gists_url": "https://api.github.com/users/nbigaouette/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbigaouette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbigaouette/subscriptions", "organizations_url": "https://api.github.com/users/nbigaouette/orgs", "repos_url": "https://api.github.com/users/nbigaouette/repos", "events_url": "https://api.github.com/users/nbigaouette/events{/privacy}", "received_events_url": "https://api.github.com/users/nbigaouette/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-03T18:44:31Z", "updated_at": "2018-09-03T18:44:31Z", "author_association": "NONE", "body": "As described in https://github.com/spearow/juice/issues/38, I've created a repo to show this problem.\r\n\r\n* In PR https://github.com/nbigaouette/juice_examples/pull/2, the dependency on `juice` from crates.io is added to a hello-world example. Even though only the `native` feature is enabled (`default-features = false` is used on `juice`) the CI shows the failing; linking to both cuda and opencl is attempted (which should be happening only if the respective features are enabled).\r\n* In PR https://github.com/nbigaouette/juice_examples/pull/3 a `[replace] section in Cargo.toml is used to point to a git submodule (emulating a local directory). CI passes (both linux and macos).\r\n* In PR https://github.com/nbigaouette/juice_examples/pull/4 a `[patch.crates-io] section in Cargo.toml is used to point to the git submodule. CI passes (both linux and macos)."}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/418512573", "html_url": "https://github.com/rust-lang/cargo/issues/5963#issuecomment-418512573", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5963", "id": 418512573, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODUxMjU3Mw==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T20:48:13Z", "updated_at": "2018-09-04T20:48:13Z", "author_association": "MEMBER", "body": "Thanks for the report! Note that features enabled for a crate with Cargo are unioned so that any crate depending on a crate will add to the set of enabled features. Is that perhaps what's going on here? Is there a different crate enabling the features (perhaps `default-features = false` was forgotten?) in the dependency graph?\r\n\r\nIf not, could a more minimal example be generated to help with debugging?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/418526866", "html_url": "https://github.com/rust-lang/cargo/issues/5963#issuecomment-418526866", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5963", "id": 418526866, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODUyNjg2Ng==", "user": {"login": "nbigaouette", "id": 112988, "node_id": "MDQ6VXNlcjExMjk4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/112988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbigaouette", "html_url": "https://github.com/nbigaouette", "followers_url": "https://api.github.com/users/nbigaouette/followers", "following_url": "https://api.github.com/users/nbigaouette/following{/other_user}", "gists_url": "https://api.github.com/users/nbigaouette/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbigaouette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbigaouette/subscriptions", "organizations_url": "https://api.github.com/users/nbigaouette/orgs", "repos_url": "https://api.github.com/users/nbigaouette/repos", "events_url": "https://api.github.com/users/nbigaouette/events{/privacy}", "received_events_url": "https://api.github.com/users/nbigaouette/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T21:39:11Z", "updated_at": "2018-09-04T21:39:11Z", "author_association": "NONE", "body": "Here's the output of `cargo tree` on the hello world (e729ad2 - https://github.com/nbigaouette/juice_examples/pull/2):\r\n```\r\nhello-world v0.1.0 (file:///Users/nbigaouette/codes/rust/ai_ml/juice/juice_examples.git/hello-world)\r\n\u2514\u2500\u2500 juice v0.2.3\r\n    \u251c\u2500\u2500 capnp v0.8.17\r\n    \u2502   \u2514\u2500\u2500 byteorder v1.2.6\r\n    \u251c\u2500\u2500 coaster v0.1.0\r\n    \u2502   \u251c\u2500\u2500 bitflags v0.3.3\r\n    \u2502   \u251c\u2500\u2500 byteorder v0.4.2\r\n    \u2502   \u251c\u2500\u2500 enum_primitive v0.1.1\r\n    \u2502   \u2502   \u2514\u2500\u2500 num-traits v0.1.43\r\n    \u2502   \u2502       \u2514\u2500\u2500 num-traits v0.2.5\r\n    \u2502   \u251c\u2500\u2500 lazy_static v0.1.16\r\n    \u2502   \u251c\u2500\u2500 libc v0.2.43\r\n    \u2502   \u2514\u2500\u2500 num v0.1.42\r\n    \u2502       \u251c\u2500\u2500 num-bigint v0.1.44\r\n    \u2502       \u2502   \u251c\u2500\u2500 num-integer v0.1.39\r\n    \u2502       \u2502   \u2502   \u2514\u2500\u2500 num-traits v0.2.5 (*)\r\n    \u2502       \u2502   \u251c\u2500\u2500 num-traits v0.2.5 (*)\r\n    \u2502       \u2502   \u251c\u2500\u2500 rand v0.4.3\r\n    \u2502       \u2502   \u2502   \u2514\u2500\u2500 libc v0.2.43 (*)\r\n    \u2502       \u2502   \u2514\u2500\u2500 rustc-serialize v0.3.24\r\n    \u2502       \u2502   [dev-dependencies]\r\n    \u2502       \u2502   \u2514\u2500\u2500 rand v0.4.3 (*)\r\n    \u2502       \u251c\u2500\u2500 num-complex v0.1.43\r\n    \u2502       \u2502   \u251c\u2500\u2500 num-traits v0.2.5 (*)\r\n    \u2502       \u2502   \u2514\u2500\u2500 rustc-serialize v0.3.24 (*)\r\n    \u2502       \u251c\u2500\u2500 num-integer v0.1.39 (*)\r\n    \u2502       \u251c\u2500\u2500 num-iter v0.1.37\r\n    \u2502       \u2502   \u251c\u2500\u2500 num-integer v0.1.39 (*)\r\n    \u2502       \u2502   \u2514\u2500\u2500 num-traits v0.2.5 (*)\r\n    \u2502       \u251c\u2500\u2500 num-rational v0.1.42\r\n    \u2502       \u2502   \u251c\u2500\u2500 num-bigint v0.1.44 (*)\r\n    \u2502       \u2502   \u251c\u2500\u2500 num-integer v0.1.39 (*)\r\n    \u2502       \u2502   \u251c\u2500\u2500 num-traits v0.2.5 (*)\r\n    \u2502       \u2502   \u2514\u2500\u2500 rustc-serialize v0.3.24 (*)\r\n    \u2502       \u2514\u2500\u2500 num-traits v0.2.5 (*)\r\n    \u251c\u2500\u2500 coaster-blas v0.2.0\r\n    \u2502   \u251c\u2500\u2500 coaster v0.1.0 (*)\r\n    \u2502   \u251c\u2500\u2500 lazy_static v0.1.16 (*)\r\n    \u2502   \u2514\u2500\u2500 rblas v0.0.13\r\n    \u2502       \u251c\u2500\u2500 libc v0.2.43 (*)\r\n    \u2502       \u2514\u2500\u2500 num v0.1.42 (*)\r\n    \u251c\u2500\u2500 coaster-nn v0.4.1\r\n    \u2502   \u251c\u2500\u2500 coaster v0.1.0 (*)\r\n    \u2502   \u251c\u2500\u2500 lazy_static v0.1.16 (*)\r\n    \u2502   \u251c\u2500\u2500 libc v0.2.43 (*)\r\n    \u2502   \u2514\u2500\u2500 log v0.3.9\r\n    \u2502       \u2514\u2500\u2500 log v0.4.4\r\n    \u2502           \u2514\u2500\u2500 cfg-if v0.1.5\r\n    \u251c\u2500\u2500 log v0.3.9 (*)\r\n    \u251c\u2500\u2500 num v0.1.42 (*)\r\n    \u251c\u2500\u2500 rand v0.3.22\r\n    \u2502   \u251c\u2500\u2500 libc v0.2.43 (*)\r\n    \u2502   \u2514\u2500\u2500 rand v0.4.3 (*)\r\n    \u2514\u2500\u2500 timeit v0.1.2\r\n        \u2514\u2500\u2500 time v0.1.40\r\n            \u2514\u2500\u2500 libc v0.2.43 (*)\r\n            [dev-dependencies]\r\n            \u2514\u2500\u2500 winapi v0.3.5\r\n    [build-dependencies]\r\n    \u2514\u2500\u2500 capnpc v0.8.9\r\n        \u2514\u2500\u2500 capnp v0.8.17 (*)\r\n```\r\n\r\nCould it be that (maybe) `coaster-blas` and `coaster-nn` both have a `default = [\"native\", \"cuda\", \"opencl\"]` (https://github.com/spearow/coaster-blas/blob/master/Cargo.toml#L34, https://github.com/spearow/coaster-nn/blob/master/Cargo.toml#L31)?\r\n\r\nThat might explain why using the crates.io version fails.\r\n\r\nBut then why would using a `[patch.crates-io]` (pointing to a directory containing `juice`, `coaster`, `coaster-nn` and `coaster-blas`) just for `juice` (https://github.com/nbigaouette/juice_examples/pull/4) fix the issue?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/418568623", "html_url": "https://github.com/rust-lang/cargo/issues/5963#issuecomment-418568623", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5963", "id": 418568623, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODU2ODYyMw==", "user": {"login": "drahnr", "id": 667047, "node_id": "MDQ6VXNlcjY2NzA0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/667047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drahnr", "html_url": "https://github.com/drahnr", "followers_url": "https://api.github.com/users/drahnr/followers", "following_url": "https://api.github.com/users/drahnr/following{/other_user}", "gists_url": "https://api.github.com/users/drahnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/drahnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drahnr/subscriptions", "organizations_url": "https://api.github.com/users/drahnr/orgs", "repos_url": "https://api.github.com/users/drahnr/repos", "events_url": "https://api.github.com/users/drahnr/events{/privacy}", "received_events_url": "https://api.github.com/users/drahnr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-05T01:24:04Z", "updated_at": "2018-09-05T01:24:04Z", "author_association": "NONE", "body": "@nbianca yes they both enable those sets by default, but this is still very unexpected behaviour given that the crates in the dependency graph only get activated if the parent (here `juice`) (the one that has the dependency on the child, here `coaster`, `coaster-blas` and `coaster-nn` ) has a feature enabled, which enables the childrens features.\r\n\r\n@alexcrichton what's the appropriate way to debug this? How can I see which crate enables which linker flags/feature implications?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/418888111", "html_url": "https://github.com/rust-lang/cargo/issues/5963#issuecomment-418888111", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/5963", "id": 418888111, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODg4ODExMQ==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-05T21:30:52Z", "updated_at": "2018-09-05T21:31:06Z", "author_association": "MEMBER", "body": "Ah unfortunately I'm not sure why `[patch]` would change things, although it could be pointing to modified sources which would change the calculus a bit. \r\n\r\n@drahnr ah unfortunately there's also not a great way to figure out what dependency enabled a feature, but I often work backwards from `cargo tree` like @nbigaouette  is doing"}]