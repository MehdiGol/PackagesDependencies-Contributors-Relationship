[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/432269922", "html_url": "https://github.com/rust-lang/cargo/issues/6211#issuecomment-432269922", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6211", "id": 432269922, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjI2OTkyMg==", "user": {"login": "Eh2406", "id": 3709504, "node_id": "MDQ6VXNlcjM3MDk1MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eh2406", "html_url": "https://github.com/Eh2406", "followers_url": "https://api.github.com/users/Eh2406/followers", "following_url": "https://api.github.com/users/Eh2406/following{/other_user}", "gists_url": "https://api.github.com/users/Eh2406/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eh2406/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eh2406/subscriptions", "organizations_url": "https://api.github.com/users/Eh2406/orgs", "repos_url": "https://api.github.com/users/Eh2406/repos", "events_url": "https://api.github.com/users/Eh2406/events{/privacy}", "received_events_url": "https://api.github.com/users/Eh2406/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-23T14:27:57Z", "updated_at": "2018-10-23T14:27:57Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the report! I agree it is pretty minimal, what more information would make it more helpful!"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/432274736", "html_url": "https://github.com/rust-lang/cargo/issues/6211#issuecomment-432274736", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6211", "id": 432274736, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjI3NDczNg==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-23T14:39:49Z", "updated_at": "2018-10-23T14:40:37Z", "author_association": "CONTRIBUTOR", "body": "I would imagine in this case it could say something like:\r\n```\r\nerror: unable to load dependency `futures-util-preview` at (LOCATION)\r\n\r\nCaused by:\r\n  feature `edition` is required\r\n\r\nthis Cargo does not support nightly features, but if you\r\nswitch to nightly channel you can add\r\n`cargo-features = [\"edition\"]` to enable this feature\r\n```\r\n\r\nRight now it seems to consider parsing a Cargo.toml as a pure pass/fail, and if it fails it is ignored.  There probably should be more nuance (\"found what you're looking for, but there is a problem\"). "}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/432346365", "html_url": "https://github.com/rust-lang/cargo/issues/6211#issuecomment-432346365", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6211", "id": 432346365, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM0NjM2NQ==", "user": {"login": "Ekleog", "id": 411447, "node_id": "MDQ6VXNlcjQxMTQ0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/411447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ekleog", "html_url": "https://github.com/Ekleog", "followers_url": "https://api.github.com/users/Ekleog/followers", "following_url": "https://api.github.com/users/Ekleog/following{/other_user}", "gists_url": "https://api.github.com/users/Ekleog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ekleog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ekleog/subscriptions", "organizations_url": "https://api.github.com/users/Ekleog/orgs", "repos_url": "https://api.github.com/users/Ekleog/repos", "events_url": "https://api.github.com/users/Ekleog/events{/privacy}", "received_events_url": "https://api.github.com/users/Ekleog/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-23T17:39:31Z", "updated_at": "2018-10-23T17:39:31Z", "author_association": "NONE", "body": "> I would imagine in this case it could say something like:\n> [...]\n>\n> Right now it seems to consider parsing a Cargo.toml as a pure pass/fail, and if it fails it is ignored.  There probably should be more nuance (\"found what you're looking for, but there is a problem\"). \n\nWell, actually when downloading the crate from crates.io, it doesn't\nfail the same way (sorry for not having mentioned it in the bug report,\nit was in my head but I didn't think of writing it while following the\nsections). It already includes the error report.\n\nNow, in crates.io there's a single Cargo.toml, while on such a git dep\non a workspace there are multiple Cargo.toml to consider, so it's maybe\nharder to do?\n"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/432366823", "html_url": "https://github.com/rust-lang/cargo/issues/6211#issuecomment-432366823", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6211", "id": 432366823, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM2NjgyMw==", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-23T18:31:42Z", "updated_at": "2018-10-23T18:31:42Z", "author_association": "CONTRIBUTOR", "body": "So looking at it closer, it looks like this is a special case where just one `Cargo.toml` in the git repo parsed successfully ([testcrate](https://github.com/rust-lang-nursery/futures-rs/blob/b7769180b091f22da12d35ea808779ddfa17b7e3/futures/testcrate/Cargo.toml)).  If you take it out, you get a better error message:\r\n\r\n```\r\nerror: failed to load source for a dependency on `futures-preview`\r\n\r\nCaused by:\r\n  Unable to update https://github.com/rust-lang-nursery/futures-rs?rev=b7769180b091f22da12d35ea808779ddfa17b7e3\r\n\r\nCaused by:\r\n  failed to parse manifest at `/Users/eric/.cargo/git/checkouts/futures-rs-4ca77cb4f4f05ac4/b776918/futures-sink/Cargo.toml`\r\n\r\nCaused by:\r\n  editions are unstable\r\n\r\nCaused by:\r\n  feature `edition` is required\r\n\r\nthis Cargo does not support nightly features, but if you\r\nswitch to nightly channel you can add\r\n`cargo-features = [\"edition\"]` to enable this feature\r\n```\r\n\r\nThe code [here](https://github.com/rust-lang/cargo/blob/2098c962bca1acb5e69a3e3acbb1b42e1ada9f53/src/cargo/ops/cargo_read_manifest.rs#L86-L93) will only report the errors if *every* manifest fails.  That might be tricky to fix, because it intentionally ignores manifests it can't parse.  \r\n\r\nI'm not sure the best way to deal with it.  One idea is to maybe print warnings for manifests that fail to parse, but that might be very noisy.  Perhaps @alexcrichton has ideas?"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/432371950", "html_url": "https://github.com/rust-lang/cargo/issues/6211#issuecomment-432371950", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6211", "id": 432371950, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM3MTk1MA==", "user": {"login": "Ekleog", "id": 411447, "node_id": "MDQ6VXNlcjQxMTQ0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/411447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ekleog", "html_url": "https://github.com/Ekleog", "followers_url": "https://api.github.com/users/Ekleog/followers", "following_url": "https://api.github.com/users/Ekleog/following{/other_user}", "gists_url": "https://api.github.com/users/Ekleog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ekleog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ekleog/subscriptions", "organizations_url": "https://api.github.com/users/Ekleog/orgs", "repos_url": "https://api.github.com/users/Ekleog/repos", "events_url": "https://api.github.com/users/Ekleog/events{/privacy}", "received_events_url": "https://api.github.com/users/Ekleog/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-23T18:46:18Z", "updated_at": "2018-10-23T18:46:18Z", "author_association": "NONE", "body": "I think ideally (not considering implementation complexity, I haven't\nchecked the code), the code would:\n\n * Check each manifest one by one:\n \n    * As soon as a manifest parses and matches, accept it\n    * If a manifest doesn't parse, record an error\n    \n * If no manifest matched, output the generated errors as hints\n"}]