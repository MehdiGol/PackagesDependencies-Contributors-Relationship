[{"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/427238188", "html_url": "https://github.com/rust-lang/cargo/issues/6129#issuecomment-427238188", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6129", "id": 427238188, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzIzODE4OA==", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-05T03:51:19Z", "updated_at": "2018-10-05T03:51:19Z", "author_association": "MEMBER", "body": "Adding new dependencies seems fine by me! My historical strategy with the resolver has been \"don't add any fancy representation tricks, profile Servo, add tricks as necessary\""}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/430766225", "html_url": "https://github.com/rust-lang/cargo/issues/6129#issuecomment-430766225", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6129", "id": 430766225, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc2NjIyNQ==", "user": {"login": "Eh2406", "id": 3709504, "node_id": "MDQ6VXNlcjM3MDk1MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eh2406", "html_url": "https://github.com/Eh2406", "followers_url": "https://api.github.com/users/Eh2406/followers", "following_url": "https://api.github.com/users/Eh2406/following{/other_user}", "gists_url": "https://api.github.com/users/Eh2406/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eh2406/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eh2406/subscriptions", "organizations_url": "https://api.github.com/users/Eh2406/orgs", "repos_url": "https://api.github.com/users/Eh2406/repos", "events_url": "https://api.github.com/users/Eh2406/events{/privacy}", "received_events_url": "https://api.github.com/users/Eh2406/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T19:56:06Z", "updated_at": "2018-10-18T17:03:55Z", "author_association": "CONTRIBUTOR", "body": "I have a branch that stubs out getting this working. It involves all the ugly things I can think of. The state is a mess of big nested data structures. The algorithm is a bunch of nested loops in the hottest part of the resolver. It is not even checking for redundant work. The code is mostly repeated between the code that check if a candidate can be added and where the the candidate is added. Several existing optimizations are completely removed in the case that a pub-dep has ben looked at. The error messages are just \"Todo\", and most of the commit messages are \"oops\".\r\n\r\nBut it is working! I modified the [passes_validation](https://github.com/rust-lang/cargo/pull/6149) to check for pub-dep conflicts, then modified the `registry_strategy` to make them. It promptly generated a failing case. Copy the result to a standalone test, hand minimize, and add an explanation. Add something, anything to get that test passing. Then rinse and repeat. Lets just say that the fuzzer is very good at finding every optimization that this can react (badly) with. Eventually it passes! \r\n\r\nNext try the `limited_independence_of_irrelevant_alternatives` and if finds a case of a registry that should work, but doesn't. Then rinse and repeat 3 more times. Finding backjumping optimization that need to be handled more correctly, disabled for now. But with the backjumping optimization disabled, it now finds a case that experiences exponential blowup. \r\n\r\nSo my plan for the Impl day at RBR is to attempt to get `backjumping` working, and clean my history into  something submittable.\r\n\r\nedit: the cleaned up history is at https://github.com/Eh2406/cargo/tree/pub-dep"}, {"url": "https://api.github.com/repos/rust-lang/cargo/issues/comments/431427385", "html_url": "https://github.com/rust-lang/cargo/issues/6129#issuecomment-431427385", "issue_url": "https://api.github.com/repos/rust-lang/cargo/issues/6129", "id": 431427385, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQyNzM4NQ==", "user": {"login": "Eh2406", "id": 3709504, "node_id": "MDQ6VXNlcjM3MDk1MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eh2406", "html_url": "https://github.com/Eh2406", "followers_url": "https://api.github.com/users/Eh2406/followers", "following_url": "https://api.github.com/users/Eh2406/following{/other_user}", "gists_url": "https://api.github.com/users/Eh2406/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eh2406/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eh2406/subscriptions", "organizations_url": "https://api.github.com/users/Eh2406/orgs", "repos_url": "https://api.github.com/users/Eh2406/repos", "events_url": "https://api.github.com/users/Eh2406/events{/privacy}", "received_events_url": "https://api.github.com/users/Eh2406/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-19T16:51:04Z", "updated_at": "2018-10-19T16:51:04Z", "author_association": "CONTRIBUTOR", "body": "Cc @necaris"}]